#!/usr/bin/env python3
"""
–ü—Ä–æ—Å—Ç–æ–π —Ç–µ—Å—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ä–∞–±–æ—Ç—ã –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ
"""

import os
import sys
import json
from pathlib import Path

def test_environment():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ –æ–∫—Ä—É–∂–µ–Ω–∏—è"""
    print("üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ–∫—Ä—É–∂–µ–Ω–∏—è...")
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ Python –≤–µ—Ä—Å–∏–∏
    print(f"Python –≤–µ—Ä—Å–∏—è: {sys.version}")
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞–±–æ—á–µ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
    print(f"–†–∞–±–æ—á–∞—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è: {os.getcwd()}")
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–∞–π–ª–æ–≤
    required_files = [
        'bot.py',
        'admin_panel.py',
        'requirements.txt',
        '.env',
        'start.sh',
        'stop.sh'
    ]
    
    missing_files = []
    for file in required_files:
        if os.path.exists(file):
            print(f"‚úÖ {file} - –Ω–∞–π–¥–µ–Ω")
        else:
            print(f"‚ùå {file} - –ù–ï –ù–ê–ô–î–ï–ù")
            missing_files.append(file)
    
    if missing_files:
        print(f"\n‚ö†Ô∏è  –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç —Ñ–∞–π–ª—ã: {', '.join(missing_files)}")
        return False
    
    return True

def test_env_file():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ .env —Ñ–∞–π–ª–∞"""
    print("\nüîç –ü—Ä–æ–≤–µ—Ä–∫–∞ .env —Ñ–∞–π–ª–∞...")
    
    if not os.path.exists('.env'):
        print("‚ùå .env —Ñ–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω")
        return False
    
    try:
        with open('.env', 'r') as f:
            content = f.read()
            
        if 'BOT_TOKEN=' in content:
            print("‚úÖ BOT_TOKEN –Ω–∞–π–¥–µ–Ω")
        else:
            print("‚ùå BOT_TOKEN –Ω–µ –Ω–∞–π–¥–µ–Ω")
            return False
            
        if 'ADMIN_USERNAME=' in content:
            print("‚úÖ ADMIN_USERNAME –Ω–∞–π–¥–µ–Ω")
        else:
            print("‚ùå ADMIN_USERNAME –Ω–µ –Ω–∞–π–¥–µ–Ω")
            
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —á—Ç–µ–Ω–∏—è .env: {e}")
        return False

def test_data_files():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–∞–π–ª–æ–≤ –¥–∞–Ω–Ω—ã—Ö"""
    print("\nüîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–∞–π–ª–æ–≤ –¥–∞–Ω–Ω—ã—Ö...")
    
    data_files = ['users_data.json', 'requests_data.json']
    
    for file in data_files:
        if os.path.exists(file):
            try:
                with open(file, 'r') as f:
                    json.load(f)
                print(f"‚úÖ {file} - –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π JSON")
            except json.JSONDecodeError:
                print(f"‚ö†Ô∏è  {file} - –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π JSON")
            except Exception as e:
                print(f"‚ùå {file} - –æ—à–∏–±–∫–∞: {e}")
        else:
            print(f"‚ö†Ô∏è  {file} - –Ω–µ –Ω–∞–π–¥–µ–Ω (–±—É–¥–µ—Ç —Å–æ–∑–¥–∞–Ω –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏)")

def test_permissions():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞"""
    print("\nüîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞...")
    
    scripts = ['start.sh', 'stop.sh']
    
    for script in scripts:
        if os.path.exists(script):
            if os.access(script, os.X_OK):
                print(f"‚úÖ {script} - –∏—Å–ø–æ–ª–Ω–∏–º—ã–π")
            else:
                print(f"‚ö†Ô∏è  {script} - –Ω–µ –∏—Å–ø–æ–ª–Ω–∏–º—ã–π (–≤—ã–ø–æ–ª–Ω–∏—Ç–µ: chmod +x {script})")
        else:
            print(f"‚ùå {script} - –Ω–µ –Ω–∞–π–¥–µ–Ω")

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    print("üöÄ –¢–µ—Å—Ç –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ –∫ –¥–µ–ø–ª–æ—é\n")
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∏
    env_ok = test_environment()
    env_file_ok = test_env_file()
    test_data_files()
    test_permissions()
    
    print("\n" + "="*50)
    
    if env_ok and env_file_ok:
        print("‚úÖ –í—Å–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø—Ä–æ–π–¥–µ–Ω—ã! –ì–æ—Ç–æ–≤ –∫ –∑–∞–ø—É—Å–∫—É.")
        print("\n–î–ª—è –∑–∞–ø—É—Å–∫–∞ –≤—ã–ø–æ–ª–Ω–∏—Ç–µ:")
        print("  ./start.sh")
        print("\n–î–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –≤—ã–ø–æ–ª–Ω–∏—Ç–µ:")
        print("  ./stop.sh")
    else:
        print("‚ùå –ï—Å—Ç—å –ø—Ä–æ–±–ª–µ–º—ã. –ò—Å–ø—Ä–∞–≤—å—Ç–µ –∏—Ö –ø–µ—Ä–µ–¥ –∑–∞–ø—É—Å–∫–æ–º.")
        
    print("\nüìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:")
    print(f"  –¢–µ–∫—É—â–∞—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è: {os.getcwd()}")
    print(f"  –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ñ–∞–π–ª–æ–≤: {len(os.listdir('.'))}")
    
    return 0

if __name__ == "__main__":
    sys.exit(main()) 